library(Rcmdr)
setwd("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Factorial Analysis")
DataFA <-
readXL("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Factorial Analysis/lakes.xls",
rownames=FALSE, header=TRUE, na="", sheet="Hoja1", stringsAsFactors=TRUE)
head(DataFA)
numSummary(DataFA[,c("Carbon", "Conductivity", "Depth", "NH4", "NO2",
"NO3", "Oxygen", "pH", "PO4", "SiO2", "Temperature"), drop=FALSE],
statistics=c("mean", "sd", "IQR", "quantiles"), quantiles=c(0,.25,.5,.75,1))
library(lattice, pos=17)
library(survival, pos=17)
library(Formula, pos=17)
library(ggplot2, pos=17)
library(Hmisc, pos=17)
rcorr.adjust(DataFA[,c("Carbon","Conductivity","Depth","NH4","NO2","NO3","Oxygen","pH",
"PO4","SiO2","Temperature")], type="pearson", use="complete")
local({
.FA <-
factanal(~Carbon+Conductivity+Depth+NH4+NO2+NO3+Oxygen+pH+PO4+SiO2+Temperature,
factors=2, rotation="varimax", scores="none", data=DataFA)
print(.FA, cutoff = .5, sort = TRUE)
})
local({
.FA2 <-
factanal(~Carbon+Conductivity+Depth+NH4+NO2+NO3+Oxygen+pH+PO4+SiO2+Temperature,
factors=2, rotation="promax", scores="none", data=DataFA)
print(.FA, cutoff = .5, sort = TRUE)
})
local({
.FA2 <-
factanal(~Carbon+Conductivity+Depth+NH4+NO2+NO3+Oxygen+pH+PO4+SiO2+Temperature,
factors=2, rotation="promax", scores="none", data=DataFA)
print(.FA2, cutoff = .5, sort = TRUE)
})
.FA <-
factanal(~Carbon+Conductivity+Depth+NH4+NO2+NO3+Oxygen+pH+PO4+SiO2+Temperature,
factors=2, rotation="varimax", scores="none", data=DataFA)
plot(.FA$loadings, type="n") #display the graphic
text(.FA$loadings, labels=row.names(.FA$loadings),cex=.75)
.FA2 <-
factanal(~Carbon+Conductivity+Depth+NH4+NO2+NO3+Oxygen+pH+PO4+SiO2+Temperature,
factors=2, rotation="promax", scores="none", data=DataFA)
plot(.FA2$loadings, type="n") #display the graphic
text(.FA2$loadings, labels=row.names(.FA2$loadings),cex=.75)
R2 = cor(DataFA[,3:13])^2     # square of the correl. coeff.
R2.suma = sum(R2)-dim(R2)[1]  # sum
RP2 = partial.cor(DataFA[,3:13])$R^2
RP2.suma = sum(RP2)           # sum square of partial correl. coeff.
kmo = R2.suma/(R2.suma + RP2.suma)  # compute KMO
print(paste("KMO Index:", round(kmo, 3)))     # ourput the result
library(Rcmdr)
setwd("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis")
Data_CA <-
readXL("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis/cars.xls", rownames=FALSE, header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
rownames(Data_CA)=Data_CA[,1]
Data_CA = Data_CA[,2:5]
head(Data_CA)
head(Data_CA)
setwd("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis")
Data_CA <-
readXL("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis/cars.xls", rownames=FALSE, header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
head(Data_CA)
Data_CA
rownames(Data_CA)=Data_CA[,1]
Data_CA = Data_CA[,2:5]
Data_CA
rownames(Data_CA)=Data_CA[,1]
Data_CA = Data_CA[,2:5]
setwd("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis")
Data_CA <-
readXL("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis/cars.xls", rownames=FALSE, header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
head(Data_CA)
setwd("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis")
Data_CA <- readXL("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis/cars.xls", rownames=FALSE, header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
head(Data_CA)
rownames(Data_CA)=Data_CA[,1]
Data_CA = Data_CA[,2:5]
head(Data_CA)
library(abind, pos=17)
library(e1071, pos=18)
numSummary(Data_CA[,c("A", "B", "C", "D"), drop=FALSE], statistics=c("mean", "sd",
"IQR", "quantiles"), quantiles=c(0,.25,.5,.75,1))
The absolute contributions of the \$contrib variables help us to better understand the axes, since they point out the variable weight in the formation of each of the axes. Therefore, these are the variables that better discriminate the different candidates, and could be used to choose between them, discarding the remaining ones.
The absolute contributions of the \$contrib variables help us to better understand the axes, since they point out the variable weight in the formation of each of the axes. Therefore, these are the variables that better discriminate the different candidates, and could be used to choose between them, discarding the remaining ones.
library("FactoMineR")
options(ggrepel.max.overlaps = Inf)
res <- CA(Data_CA, ncp=5, graph = TRUE)
res <- CA(Data_CA, ncp=5, graph = TRUE, axes = c(10, 10))
res <- CA(Data_CA, ncp=5, graph = TRUE)
res <- CA(Data_CA, ncp=5)
E
res <- CA(Data_CA, ncp=5, graph =FALSE)
res <- CA(Data_CA, ncp=5, graph = FALSE)
res <- CA(Data_CA, ncp=5, graph = FALSE)
res <- CA(Data_CA, ncp=5, graph = TRUE)
plot.CA()
plot.CA(res)
plot.CA(res, invisible = T)
plot.CA(res, palette = palette(value = rainbow(30)))
plot.CA(res, palette = palette(rainbow(30))
plot.CA(res, palette = palette(rainbow(30))
plot.CA(res, palette = palette(rainbow(30)))
plot.CA(res, palette = rainbow(30))
res <- CA(Data_CA, ncp=5, graph = TRUE)
res$col
res$row
res$svd
res$eig
res$col
res$row
options(ggrepel.max.overlaps = Inf, width = 20)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf, width = 20)
res <- CA(Data_CA, ncp=5, graph = TRUE)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf, width = 80)
res <- CA(Data_CA, ncp=5, graph = TRUE)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf)
res <- CA(Data_CA, ncp=5, graph = TRUE)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf, cex=2)
res <- CA(Data_CA, ncp=5, graph = TRUE)
options(ggrepel.max.overlaps = Inf, cex=0.5)
res <- CA(Data_CA, ncp=5, graph = TRUE)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf, cex=0.2)
res <- CA(Data_CA, ncp=5, graph = TRUE)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf, cex=0.01)
res <- CA(Data_CA, ncp=5, graph = TRUE)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf, pch=2)
res <- CA(Data_CA, ncp=5, graph = TRUE)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf, pch=5)
res <- CA(Data_CA, ncp=5, graph = TRUE)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf, pch=2)
res <- CA(Data_CA, ncp=5, graph = TRUE)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf, pch=1)
res <- CA(Data_CA, ncp=5, graph = TRUE)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf, pch=10)
res <- CA(Data_CA, ncp=5, graph = TRUE)
options(ggrepel.max.overlaps = Inf)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf)
res <- CA(Data_CA, ncp=5, graph = TRUE)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf)
res <- CA(Data_CA, ncp=5, graph = TRUE)
res$col
res$col
res$col$contrib
res$row$contrib
res$col$cos2
res$col$cos2
res$row$cos2
res$col$contrib
res$row$contrib
0.2212299+0.007263384
res$col$cos2
res$row$cos2
0.2212299+0.007263384
res$col$cos2
res$row$cos2
rownames(Data_CA)=Data_CA[,1]
Data_CA = Data_CA[,2:5]
setwd("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis")
Data_CA <- readXL("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis/cars.xls", rownames=FALSE, header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
head(Data_CA)
rownames(Data_CA)=Data_CA[,1]
Data_CA = Data_CA[,2:5]
head(Data_CA)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf)
res <- CA(Data_CA, ncp=5, graph = TRUE)
res$col$contrib
res$row$contrib
res$col$cos2
res$row$cos2
res$col$cos2
res$row$cos2
res$row$inertia
res$col$inertia
res$row$inertia
writeLines("Columns inertia:")
writeLines("Columns inertia:")
res$col$inertia
res$row$inertia
writeLines("\nColumns inertia:")
res$col$inertia
res$row$inertia
writeLines("Columns inertia:")
res$col$inertia
writeLines("\nRows inertia:")
res$row$inertia
res$eig
res$eig
res$eig
library(Rcmdr)
setwd("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis")
Data_CA <- readXL("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis/cars.xls", rownames=FALSE, header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
head(Data_CA)
rownames(Data_CA)=Data_CA[,1]
Data_CA = Data_CA[,2:5]
head(Data_CA)
rownames(Data_CA)=Data_CA[,1]
Data_CA = Data_CA[,2:5]
setwd("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis")
Data_CA <- readXL("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis/cars.xls", rownames=FALSE, header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
head(Data_CA)
rownames(Data_CA)=Data_CA[,1]
Data_CA = Data_CA[,2:5]
head(Data_CA)
library("FactoMineR")
options(ggrepel.max.overlaps = Inf)
res <- CA(Data_CA, ncp=5, graph = TRUE)
res$col$contrib
res$row$contrib
res$col$cos2
res$row$cos2
writeLines("Columns inertia:")
res$col$inertia
writeLines("\nRows inertia:")
res$row$inertia
res$eig
library("factoextra")
fviz_ca_biplot(res, repel = TRUE, title = "CA Factor Map")
fviz_ca_row(res, col.row = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
fviz_contrib(res, choice = "col", axes = 1, top = 10)
fviz_contrib(res, choice = "col", axes = 2, top = 10)
rownames(Data_CA)=Data_CA[,1]
Data_CA = Data_CA[,2:5]
setwd("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis")
Data_CA <- readXL("C:/Users/adrib/Desktop/bioinformatic_course/statistical_analysis/4. Model selection/Correspondence Analysis/cars.xls", rownames=FALSE, header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
head(Data_CA)
rownames(Data_CA)=Data_CA[,1]
Data_CA = Data_CA[,2:5]
head(Data_CA)
